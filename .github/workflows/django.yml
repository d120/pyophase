name: Test

on: [ push, pull_request ]

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: pyophase
          MYSQL_PASSWORD: pyophase
          MYSQL_DATABASE: pyophase
          MYSQL_ROOT_PASSWORD: pyophase
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-{{ hashFiles('requirements/*') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ matrix.python-version }}-{{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-${{ matrix.python-version }}-
            ${{ runner.os }}-npm-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coveralls
          pip install -r requirements/development.txt
          pip install -r requirements/production.txt
          npm install
          echo "PASSWORD_HASHERS = ['django.contrib.auth.hashers.MD5PasswordHasher',]" >> pyophase/settings.py

      - name: Static tests
        env:
          PYTHONWARNINGS: all
        run: |
          python manage.py check
          python manage.py makemigrations --dry-run --check

      - name: Unit tests
        env:
          PYTHONWARNINGS: all
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          coverage run manage.py test
          coverage run -a manage.py test --settings pyophase.settings_github_actions
          coveralls
